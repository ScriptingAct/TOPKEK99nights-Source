local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "TOPKEK PREMIUM [99 nights] ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô‡πÑ‡∏•‡∏ï‡πå " .. Fluent.Version,
    SubTitle = "by Alexzy123",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å", Icon = "" }),
    Settings = Window:AddTab({ Title = "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤", Icon = "settings" })
}

local Options = Fluent.Options

do
    -- WalkSpeed Slider
    local WalkSpeedSlider = Tabs.Main:AddSlider("LoopWalkSpeed", {
        Title = "‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô",
        Description = "‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô",
        Default = 16,
        Min = 16,
        Max = 100,
        Rounding = 1,
    })

    -- Fly Speed Slider (‡πÉ‡∏´‡∏°‡πà)
    local FlySpeedSlider = Tabs.Main:AddSlider("FlySpeed", {
        Title = "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ö‡∏¥‡∏ô",
        Description = "‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ö‡∏¥‡∏ô",
        Default = 50,
        Min = 10,
        Max = 200,
        Rounding = 1,
    })

    Tabs.Main:AddButton({
        Title = "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏ß",
        Description = "‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏° loop ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏î‡∏¥‡∏ô",
        Callback = function()
            print("‡πÄ‡∏£‡∏¥‡πà‡∏° Loop WalkSpeed...")

            task.spawn(function()
                while true do
                    task.wait(1)
                    if Fluent.Unloaded then break end

                    local player = game.Players.LocalPlayer
                    if player and player.Character then
                        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                        if humanoid then
                            humanoid.WalkSpeed = Options.LoopWalkSpeed.Value
                        end
                    end
                end
            end)
        end
    })

-- üå´Ô∏è NoFog Toggle ‡πÅ‡∏ö‡∏ö Loop
local Lighting = game:GetService("Lighting")
local originalFogEnd = Lighting.FogEnd
local originalFogStart = Lighting.FogStart

local NoFogToggle = Tabs.Main:AddToggle("NoFog", {
    Title = "‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏≠‡∏Å",
    Default = false
})

local noFogLoopRunning = false

NoFogToggle:OnChanged(function(value)
    if value then
        noFogLoopRunning = true
        task.spawn(function()
            while noFogLoopRunning and not Fluent.Unloaded do
                Lighting.FogEnd = 1000000
                Lighting.FogStart = 0
                task.wait(0.5)
            end
        end)
    else
        noFogLoopRunning = false
        Lighting.FogEnd = originalFogEnd
        Lighting.FogStart = originalFogStart
    end
end)


    -- LoopFB Toggle
    local FBLoopToggle = Tabs.Main:AddToggle("LoopFB", {
        Title = "‡πÅ‡∏™‡∏á‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏à‡πâ‡∏≤ (‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ X )",
        Default = false
    })

    task.spawn(function()
        while true do
            task.wait(1)
            if Fluent.Unloaded then break end
            if Options.LoopFB.Value then
                print("LoopFB is running...")
            end
        end
    end)

    -- Fly ‡πÅ‡∏ö‡∏ö Inf Yield (‡πÅ‡∏Å‡πâ T ‡∏ö‡∏¥‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô, G ‡∏ö‡∏¥‡∏ô‡∏•‡∏á)
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")

    local flying = false
    local player = game.Players.LocalPlayer

    local flyToggle = Tabs.Main:AddToggle("FlyToggle", {
        Title = "‡∏ö‡∏¥‡∏ô [‡∏Å‡∏î T ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏¥‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Å‡∏î G ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏¥‡∏ô‡∏•‡∏á]",
        Default = false
    })

    local bodyVelocity, bodyGyro

    flyToggle:OnChanged(function(enabled)
        flying = enabled

        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local humanoid = character:FindFirstChildOfClass("Humanoid")

        if flying then
            humanoid.PlatformStand = true

            bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.Parent = humanoidRootPart

            bodyGyro = Instance.new("BodyGyro")
            bodyGyro.MaxTorque = Vector3.new(4e5, 4e5, 4e5)
            bodyGyro.P = 10000
            bodyGyro.CFrame = humanoidRootPart.CFrame
            bodyGyro.Parent = humanoidRootPart

            local function updateVelocity()
                if not flying then return end

                local cam = workspace.CurrentCamera
                local moveDirection = Vector3.new()

                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveDirection = moveDirection + cam.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveDirection = moveDirection - cam.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveDirection = moveDirection - cam.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveDirection = moveDirection + cam.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.T) then -- ‡∏ö‡∏¥‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô
                    moveDirection = moveDirection + Vector3.new(0,1,0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.G) then -- ‡∏ö‡∏¥‡∏ô‡∏•‡∏á
                    moveDirection = moveDirection - Vector3.new(0,1,0)
                end

                if moveDirection.Magnitude > 0 then
                    bodyVelocity.Velocity = moveDirection.Unit * Options.FlySpeed.Value
                    bodyGyro.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + moveDirection)
                else
                    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                end
            end

            RunService:BindToRenderStep("Fly", Enum.RenderPriority.Character.Value + 1, updateVelocity)

        else
            humanoid.PlatformStand = false
            if bodyVelocity then
                bodyVelocity:Destroy()
                bodyVelocity = nil
            end
            if bodyGyro then
                bodyGyro:Destroy()
                bodyGyro = nil
            end
            RunService:UnbindFromRenderStep("Fly")
        end
    end)

    -- Infinite Jump Toggle
    local infJumpEnabled = false

    local infJumpToggle = Tabs.Main:AddToggle("InfJumpToggle", {
        Title = "‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î",
        Default = false
    })

    infJumpToggle:OnChanged(function(value)
        infJumpEnabled = value
    end)

    game:GetService("UserInputService").JumpRequest:Connect(function()
        if infJumpEnabled then
            local character = player.Character
            if character and character:FindFirstChildOfClass("Humanoid") then
                character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

-- Settings Tab
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})

InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "TOPKEK",
    Content = "TOPKEK 1.0 Has been Started.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
